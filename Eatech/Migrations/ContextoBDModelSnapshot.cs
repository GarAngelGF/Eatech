// <auto-generated />
using System;
using Eatech.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eatech.Migrations
{
    [DbContext(typeof(ContextoBD))]
    partial class ContextoBDModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Eatech.Models.Bd_Alumno", b =>
                {
                    b.Property<Guid>("IdAlumno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Alergias")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid?>("BdI_Usu_AlumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Enfermedades")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("GradoEscolar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoMatricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Notas")
                        .IsRequired()
                        .HasMaxLength(528)
                        .HasColumnType("nvarchar(528)");

                    b.Property<string>("PreferenciasComida")
                        .IsRequired()
                        .HasMaxLength(528)
                        .HasColumnType("nvarchar(528)");

                    b.Property<string>("aMaterno")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("aPaterno")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("IdAlumno");

                    b.HasIndex("BdI_Usu_AlumId");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("Eatech.Models.Bd_Comida", b =>
                {
                    b.Property<Guid>("IDComida")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("Porciones")
                        .HasColumnType("int");

                    b.Property<int>("PorcionesDisponibles")
                        .HasColumnType("int");

                    b.Property<string>("Visibilidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDComida");

                    b.ToTable("Comidas");
                });

            modelBuilder.Entity("Eatech.Models.Bd_Ex_ClaveLicenciaVerifi", b =>
                {
                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Clave");

                    b.ToTable("LicenciaUsu");
                });

            modelBuilder.Entity("Eatech.Models.Bd_Ex_LicenciaAdmin", b =>
                {
                    b.Property<Guid>("IdLicencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ClaveLicencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdLicencia");

                    b.HasIndex("ClaveLicencia");

                    b.HasIndex("IdUsuario");

                    b.ToTable("LicenciaAdmin");
                });

            modelBuilder.Entity("Eatech.Models.Bd_Ingredientes", b =>
                {
                    b.Property<Guid>("IdIngrediente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdIngrediente");

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("Eatech.Models.Bd_Pedido", b =>
                {
                    b.Property<Guid>("pedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCPedido")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotaPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("pedido");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("Eatech.Models.Bd_Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BdI_Usu_AlumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CaducidadToken")
                        .HasColumnType("datetime2");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TokenDRestauracion")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("aMaterno")
                        .IsRequired()
                        .HasMaxLength(28)
                        .HasColumnType("nvarchar(28)");

                    b.Property<string>("aPaterno")
                        .IsRequired()
                        .HasMaxLength(28)
                        .HasColumnType("nvarchar(28)");

                    b.HasKey("IdUsuario");

                    b.HasIndex("BdI_Usu_AlumId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Eatech.Models.BdI_Alu_Ped", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdAlumno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("pedido")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("pedido");

                    b.ToTable("Intermedia_Alum_Pedi");
                });

            modelBuilder.Entity("Eatech.Models.BdI_Com_Ingr", b =>
                {
                    b.Property<Guid>("IDComida")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdIngrediente")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("IDComida");

                    b.HasIndex("IdIngrediente");

                    b.ToTable("Intermedia_Comida_Ingre");
                });

            modelBuilder.Entity("Eatech.Models.BdI_Com_Ped", b =>
                {
                    b.Property<Guid>("IDComida")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("pedido")
                        .HasColumnType("uniqueidentifier");

                    b.HasIndex("IDComida");

                    b.HasIndex("pedido");

                    b.ToTable("Intermedia_Comida_Pedi");
                });

            modelBuilder.Entity("Eatech.Models.BdI_Usu_Alum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdAlumno")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdAlumno");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Intermedia_Usuario_Alumno");
                });

            modelBuilder.Entity("Eatech.Models.Bd_Alumno", b =>
                {
                    b.HasOne("Eatech.Models.BdI_Usu_Alum", null)
                        .WithMany("alumno")
                        .HasForeignKey("BdI_Usu_AlumId");
                });

            modelBuilder.Entity("Eatech.Models.Bd_Ex_LicenciaAdmin", b =>
                {
                    b.HasOne("Eatech.Models.Bd_Ex_ClaveLicenciaVerifi", "ClaveNavigation")
                        .WithMany()
                        .HasForeignKey("ClaveLicencia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eatech.Models.Bd_Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario");

                    b.Navigation("ClaveNavigation");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Eatech.Models.Bd_Usuario", b =>
                {
                    b.HasOne("Eatech.Models.BdI_Usu_Alum", null)
                        .WithMany("usuario")
                        .HasForeignKey("BdI_Usu_AlumId");
                });

            modelBuilder.Entity("Eatech.Models.BdI_Alu_Ped", b =>
                {
                    b.HasOne("Eatech.Models.Bd_Alumno", "Idalumno")
                        .WithMany()
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eatech.Models.Bd_Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("pedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Idalumno");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Eatech.Models.BdI_Com_Ingr", b =>
                {
                    b.HasOne("Eatech.Models.Bd_Comida", "IDcomida")
                        .WithMany()
                        .HasForeignKey("IDComida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eatech.Models.Bd_Ingredientes", "Idingrediente")
                        .WithMany()
                        .HasForeignKey("IdIngrediente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDcomida");

                    b.Navigation("Idingrediente");
                });

            modelBuilder.Entity("Eatech.Models.BdI_Com_Ped", b =>
                {
                    b.HasOne("Eatech.Models.Bd_Comida", "IDcomida")
                        .WithMany()
                        .HasForeignKey("IDComida")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eatech.Models.Bd_Pedido", "Pedido")
                        .WithMany()
                        .HasForeignKey("pedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IDcomida");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Eatech.Models.BdI_Usu_Alum", b =>
                {
                    b.HasOne("Eatech.Models.Bd_Alumno", "Idalumno")
                        .WithMany()
                        .HasForeignKey("IdAlumno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eatech.Models.Bd_Usuario", "IdUsu")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdUsu");

                    b.Navigation("Idalumno");
                });

            modelBuilder.Entity("Eatech.Models.BdI_Usu_Alum", b =>
                {
                    b.Navigation("alumno");

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
